apiVersion: apps/v1
kind: Deployment
metadata:
  name: rigger-web
  namespace: tiation
  labels:
    app: rigger-web
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rigger-web
  template:
    metadata:
      labels:
        app: rigger-web
    spec:
      containers:
      - name: rigger-web
        image: gcr.io/tiation-enterprise/rigger-web:latest
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_URL
          value: "http://rigger-api-service:4000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: rigger-db-secret
              key: url
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rigger-api
  namespace: tiation
  labels:
    app: rigger-api
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rigger-api
  template:
    metadata:
      labels:
        app: rigger-api
    spec:
      containers:
      - name: rigger-api
        image: gcr.io/tiation-enterprise/rigger-api:latest
        ports:
        - containerPort: 4000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "4000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: rigger-db-secret
              key: url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: rigger-api-secret
              key: jwt-secret
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: rigger-web-service
  namespace: tiation
  labels:
    app: rigger-web
spec:
  selector:
    app: rigger-web
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: rigger-api-service
  namespace: tiation
  labels:
    app: rigger-api
spec:
  selector:
    app: rigger-api
  ports:
  - name: http
    port: 4000
    targetPort: 4000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rigger-platform-ingress
  namespace: tiation
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  tls:
  - hosts:
    - rigger.tiation.com
    secretName: rigger-platform-tls
  rules:
  - host: rigger.tiation.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: rigger-api-service
            port:
              number: 4000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rigger-web-service
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: rigger-db-secret
  namespace: tiation
type: Opaque
stringData:
  url: "postgresql://rigger_user:CHANGE_ME_PASSWORD@tiation-db:5432/rigger_platform"
---
apiVersion: v1
kind: Secret
metadata:
  name: rigger-api-secret
  namespace: tiation
type: Opaque
stringData:
  jwt-secret: "CHANGE_ME_JWT_SECRET_KEY_FOR_PRODUCTION"