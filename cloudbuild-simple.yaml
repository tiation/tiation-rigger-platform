steps:
  # Build API Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/rigger-platform-api:latest',
      '-f', 'apps/api/Dockerfile.simple',
      '.'
    ]
    id: 'build-api'

  # Build Web Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/rigger-platform-web:latest',
      '-f', 'apps/web/Dockerfile.simple',
      '.'
    ]
    id: 'build-web'

  # Deploy API to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'rigger-platform-api',
      '--image', 'gcr.io/$PROJECT_ID/rigger-platform-api:latest',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '1Gi',
      '--cpu', '1',
      '--max-instances', '10',
      '--min-instances', '1',
      '--port', '3001',
      '--set-env-vars', 'NODE_ENV=production'
    ]
    id: 'deploy-api'
    waitFor: ['build-api']

  # Deploy Web to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'rigger-platform-web',
      '--image', 'gcr.io/$PROJECT_ID/rigger-platform-web:latest',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--memory', '512Mi',
      '--cpu', '1',
      '--max-instances', '5',
      '--min-instances', '0',
      '--port', '3000'
    ]
    id: 'deploy-web'
    waitFor: ['build-web']

options:
  logging: CLOUD_LOGGING_ONLY

timeout: '1200s'

images:
  - 'gcr.io/$PROJECT_ID/rigger-platform-api:latest'
  - 'gcr.io/$PROJECT_ID/rigger-platform-web:latest'