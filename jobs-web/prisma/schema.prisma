// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String
  phone         String?
  title         String?
  location      String?
  experience    String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  documents     Document[]
  certifications Certification[]
  applications  JobApplication[]
  profile       Profile?
}

model Profile {
  id            String    @id @default(uuid())
  userId        String    @unique
  user          User      @relation(fields: [userId], references: [id])
  bio           String?
  avatar        String?
  skills        String[]
  availability  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Document {
  id            String    @id @default(uuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  name          String
  type          String
  status        String
  fileUrl       String
  expiryDate    DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Certification {
  id            String    @id @default(uuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  name          String
  issuer        String
  issueDate     DateTime
  expiryDate    DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Job {
  id            String    @id @default(uuid())
  title         String
  company       String
  location      String
  type          String
  salary        String?
  description   String
  requirements  String[]
  status        String    @default("active")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  applications  JobApplication[]
}

model JobApplication {
  id            String    @id @default(uuid())
  userId        String
  user          User      @relation(fields: [userId], references: [id])
  jobId         String
  job           Job       @relation(fields: [jobId], references: [id])
  status        String    @default("pending")
  coverLetter   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}
